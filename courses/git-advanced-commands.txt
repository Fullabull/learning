Section: 1
0 / 2
Introduction
1. Welcome and Info about this course
2:00
2. What this course won't do [Please review before purchasing]
3:16
Section: 2
0 / 21
PreRequisites - Skip any that don't apply
3. Get an Account at GitHub
3:19
4. Setup a Repo at GitHub
3:56
Assignment 1: Get an Account at GitHub and Setup a new Repo
5. Get GIT on your machine [Windows]
5:11
6. Get GIT on your machine [Ubuntu Linux]
2:04
7. Get GIT on your machine [MAC]
2:25
Assignment 2: Get GIT on your machine
8. Get VSCode for use as an editor, a diff tool, and a merge tool
3:49
Assignment 3: Get VSCode on your machine
9. Setup VSCode as the default editor
5:13
Assignment 4: Setting VSCode as the default editor
10. Setup VSCode as the default difftool
8:25
11. Turning off the difftool prompt
4:42
Assignment 5: Setup VSCode as the default DiffTool
12. Setup VSCode as the default merge tool
4:05
Assignment 6: Set VSCode as the Default Merge Tool
13. I already have a project, how do I add it to a REMOTE repository at GitHub
9:48
DefaultWeb.zip
Assignment 7: Get an existing project into a new LOCAL repository and then publish to a REMOTE
14. Get GitViz [Optional]
8:25
15. The Repo I am using - Note: You can use any repo, you don't need mine.
16. The website I use in some of the demos
Section: 3
0 / 32
Advanced Commands
17. Amending Commits: Changing the commit message
6:00
18. Amending Commits: Adding a file to a previous commit
3:57
Assignment 8: Working with the git commit --amend command
19. Exploring the reflog: Part 1
8:15
20. Exploring the reflog: Part 2
7:28
Assignment 9: A simple examination of git reflog
21. Squash and Merge at GitHub: Part 1
9:08
22. Squash and Merge at GitHub: Part 2
7:58
23. Squash and Merge at GitHub: Part 3
9:28
Assignment 10: Performing a git squash and merge at GitHub to condense our commit tree.
24. Using Aliases
5:19
Assignment 11: Using Aliases to simplify our commands
25. Set your system to always prune during fetch
1:47
26. Performing a soft reset
6:38
27. Hard reset and clean on current commit
7:49
28. Hard reset on previous commit - merge into master
9:40
Assignment 12: Learning about git reset and git clean
29. Reverting a commit
4:56
Assignment 13: Reverting the state of the repo with a public revert commit
30. Introduction to Rebasing
6:17
31. Working with Rebase: Activity 1 - Part 1
7:29
32. Working with Rebase: Activity 1 - Part 2
7:23
33. Working with Rebase: Activity 2
10:32
34. Working with Rebase - Activity 3
9:59
Assignment 14: Rewriting our history with [git rebase]
35. Cherry Picking
9:35
Assignment 15: Performing a git cherry pick to 'pick' a specific commit into our repository.
36. Stashing Changes Part 1
9:42
web_config.zip
37. Stashing Changes Part 2
7:15
Assignment 16: Working with git stash
38. Tagging
10:35
Assignment 17: Tagging our repository
Section: 4
0 / 2
Conclusion and next steps
39. Conclusion & Next Steps
1:31
40. Bonus Lecture
1:08
