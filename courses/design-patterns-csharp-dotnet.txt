Section: 0
0 / 1
1. Introduction
7:12
Section: 1
0 / 7
The SOLID Design Principles
2. Overview
1:16
3. Single Responsibility Principle
7:29
SOLID.SRP.cs.txt
4. Open-Closed Principle
17:24
SOLID.OCP.cs.txt
5. Liskov Substitution Principle
6:37
SOLID.LSP.cs.txt
6. Interface Segregation Principle
6:33
SOLID.ISP.cs.txt
7. Dependency Inversion Principle
11:11
SOLID.DIP.cs.txt
8. Summary
5:25
Section: 2
0 / 8
Builder
9. Overview
1:43
10. Life Without Builder
3:34
11. Builder
9:06
Creational.Builder.Builder.cs.txt
12. Fluent Builder
1:16
13. Fluent Builder Inheritance with Recursive Generics
12:37
Creational.Builder.BuilderInheritance.cs.txt
14. Faceted Builder
11:11
Creational.Builder.BuilderFacets.cs.txt
Coding Exercise 1: Builder Coding Exercise
15. Summary
0:57
ExerciseAnswers.cs.txt
Section: 3
0 / 9
Factories
16. Overview
2:22
17. Point Example
4:38
Creational.Factories.Factory.cs.txt
18. Factory Method
5:03
19. Factory
2:59
20. Inner Factory
5:41
21. Abstract Factory
11:21
Creational.Factories.AbstractFactory.cs.txt
22. Abstract Factory and OCP
9:52
Coding Exercise 2: Factory Coding Exercise
23. Summary
1:05
ExerciseAnswers.cs.txt
Section: 4
0 / 7
Prototype
24. Overview
1:59
25. ICloneable is Bad
7:37
Creational.Prototype.ICloneableIsBad.cs.txt
26. Copy Constructors
3:55
Creational.Prototype.CopyConstructors.cs.txt
27. Explicit Deep Copy Interface
2:34
28. Copy Through Serialization
9:05
Creational.Prototype.CopyThroughSerialization.cs.txt
Coding Exercise 3: Prototype Coding Exercise
29. Summary
1:08
ExerciseAnswers.cs.txt
Section: 5
0 / 7
Singleton
30. Overview
2:43
31. Singleton Implementation
8:40
Creational.Singleton.Singleton.cs.txt
32. Testability Issues
7:22
33. Singleton in Dependency Injection
8:58
Dependency Injection in C# and .NET with the Autofac Library
Creational.Singleton.SingletonInDI.cs.txt
34. Monostate
3:46
Creational.Singleton.Monostate.cs.txt
Coding Exercise 4: Singleton Coding Exercise
35. Summary
2:15
ExerciseAnswers.cs.txt
Section: 6
0 / 5
Adapter
36. Overview
2:36
37. Vector/Raster Demo
8:35
Structural.Adapter.NoCaching.cs.txt
38. Adapter Caching
6:04
Structural.Adapter.WithCaching.cs.txt
Coding Exercise 5: Adapter Coding Exercise
39. Summary
1:10
ExerciseAnswers.cs.txt
Section: 7
0 / 4
Bridge
40. Overview
2:50
41. Bridge
9:49
Structural.Bridge.Bridge.cs.txt
Coding Exercise 6: Bridge Coding Exercise
42. Summary
1:33
ExerciseAnswers.cs.txt
Section: 8
0 / 5
Composite
43. Overview
1:53
44. Geometric Shapes
7:33
Structural.Composite.GeometricShapes.cs.txt
45. Neural Networks
8:00
Structural.Composite.NeuralNetworks.cs.txt
Coding Exercise 7: Composite Coding Exercise
46. Summary
1:11
ExerciseAnswers.cs.txt
Section: 9
0 / 8
Decorator
47. Overview
2:34
48. Custom String Builder
6:19
Structural.Decorator.CodeBuilder.cs.txt
49. Adapter-Decorator
6:33
Structural.Decorator.AdapterDecorator.cs.txt
50. Multiple Inheritance
8:40
Structural.Decorator.MultipleInheritance.cs.txt
51. Dynamic Decorator Composition
7:39
Structural.Decorator.Decorator.cs.txt
52. Static Decorator Composition
9:30
Coding Exercise 8: Decorator Coding Exercise
53. Summary
2:02
ExerciseAnswers.cs.txt
Section: 10
0 / 3
Façade
54. Overview
3:08
55. Façade
7:59
MdxConsole on GitHub (a console written in Managed DirectX)
56. Summary
1:25
Section: 11
0 / 5
Flyweight
57. Overview
5:24
58. Repeating User Names
12:29
Structural.Flyweight.Users.cs.txt
59. Text Formatting
8:53
Structural.Flyweight.TextFormatting.cs.txt
Coding Exercise 9: Flyweight Coding Exercise
60. Summary
0:58
ExerciseAnswers.cs.txt
Section: 12
0 / 7
Proxy
61. Overview
3:12
62. Protection Proxy
3:11
Structural.Proxy.ProtectionProxy.cs.txt
63. Property Proxy
9:24
PropertyProxy.cs.txt
64. Dynamic Proxy for Logging
11:50
Structural.Proxy.DynamicProxy.cs.txt
65. Proxy vs. Decorator
1:27
Coding Exercise 10: Proxy Coding Exercise
66. Summary
0:55
Structural.Proxy.Exercise.cs.txt
Section: 13
0 / 6
Chain of Responsibility
67. Overview
3:33
68. Command Query Separation
1:28
69. Method Chain
12:15
Behavioral.ChainOfResponsibility.MethodChain.cs.txt
70. Broker Chain
13:50
Behavioral.ChainOfResponsibility.BrokerChain.cs.txt
Coding Exercise 11: Chain of Responsibility Coding Exercise
71. Summary
1:18
ExerciseAnswers.cs.txt
Section: 14
0 / 5
Command
72. Overview
3:06
73. Command
7:47
Behavioral.Command.Command.cs.txt
74. Undo Operations
6:05
Coding Exercise 12: Command Coding Exercise
75. Summary
1:09
ExerciseAnswers.cs.txt
Section: 15
0 / 6
Interpreter
76. Overview
4:00
77. Handmade Interpreter: Lexing
7:52
Behavioral.Interpreter.Handmade.cs.txt
78. Handmade Interpreter: Parsing
12:05
79. ANTLR
2:44
Coding Exercise 13: Interpreter Coding Exercise
80. Summary
1:03
ExerciseAnswers.cs.txt
Section: 16
0 / 7
Iterator
81. Overview
1:42
82. Iterator Object
11:49
Behavioral.Iterator.TreeTraversal.cs.txt
83. Iterator Method
6:57
84. Iterators and Duck Typing
4:06
85. Array-Backed Properties
5:51
ArrayBackedProperties.cs.txt
Coding Exercise 14: Iterator Coding Exercise
86. Summary
1:28
ExerciseAnswers.cs.txt
Section: 17
0 / 5
Mediator
87. Overview
1:13
88. Chat Room
10:42
Behavioral.Mediator.ChatRoom.cs.txt
89. Event Broker
15:30
RxEventBroker.cs.txt
Mastering Reactive Extensions with C# and .NET
Coding Exercise 15: Mediator Coding Exercise
90. Summary
1:16
ExerciseAnswers.cs.txt
Section: 18
0 / 6
Memento
91. Overview
1:41
92. Memento
6:04
Behavioral.Memento.Memento.cs.txt
93. Undo and Redo
7:15
Behavioral.Memento.UndoRedo.cs.txt
94. Memento for Interop
6:38
Coding Exercise 16: Memento Coding Exercise
95. Summary
1:17
Memento.ExerciseAnswers.cs.txt
Section: 19
0 / 5
Null Object
96. Overview
1:57
97. Null Object
8:53
Behavioral.NullObject.NullObject.cs.txt
98. Dynamic Null Object
6:11
Coding Exercise 17: Null Object Coding Exercise
99. Summary
0:41
ExerciseAnswers.cs.txt
Section: 20
0 / 6
Observer
100. Overview
2:10
101. Observer via the 'event' Keyword
7:09
Behavioral.Observer.Events.cs.txt
102. Weak Event Pattern
8:25
Behavioral.Observer.WeakEventPattern.cs.txt
103. Observable Properties and Sequences
9:45
ObserverPattern.cs.txt
Coding Exercise 18: Observer Coding Exercise
104. Summary
0:56
ExerciseAnswers.cs.txt
Section: 21
0 / 6
State
105. Overview
3:08
106. Handmade State Machine
6:44
Behavioral.State.Handmade.cs.txt
107. Switch-Based State Machine
6:38
Behavioral.State.SwitchBased.cs.txt
108. State Machine with Stateless
5:37
Behavioral.State.Stateless.cs.txt
Coding Exercise 19: State Coding Exercise
109. Summary
1:00
ExerciseAnswers.cs.txt
Section: 22
0 / 5
Strategy
110. Overview
1:50
111. Dynamic Strategy
8:25
Behavioral.Strategy.Dynamic.cs.txt
112. Static Strategy
4:07
Behavioral.Strategy.Static.cs.txt
Coding Exercise 20: Strategy Coding Exercise
113. Summary
0:26
ExerciseAnswers.cs.txt
Section: 23
0 / 4
Template Method
114. Overview
1:29
115. Template Method
7:22
Behavioral.TemplateMethod.TemplateMethod.cs.txt
Coding Exercise 21: Template Method Coding Exercise
116. Summary
0:45
ExerciseAnswers.cs.txt
Section: 24
0 / 8
Visitor
117. Overview
4:46
118. Intrusive Expression Printing
4:41
Behavioral.Visitor.Intrusive.cs.txt
119. Reflection-Based Printing
9:10
Behavioral.Visitor.Reflective.cs.txt
120. Classic Visitor (Double Dispatch)
10:21
Behavioral.Visitor.Classic.cs.txt
121. Dynamic Visitor via the DLR
7:11
Behavioral.Visitor.Dynamic.cs.txt
122. Acyclic Visitor
12:01
Coding Exercise 22: Visitor Coding Exercise
123. Summary
1:09
Behavioral.Visitor.Exercise.cs.txt
Section: 25
0 / 4
Course Summary
124. Creational Paterns Summary
4:41
125. Structural Patterns Summary
6:13
126. Behavioral Patterns Summary
8:48
127. End of Course
0:54
Section: 26
0 / 5
Bonus Lectures
128. Continuation Passing Style
11:06
129. Local Inversion of Control
17:42
LIoC.cs.txt
130. DI Container and Event Broker Integration
10:11
Example source code
131. Beyond the Elvis Operator
14:46
Maybe.cs.txt
132. Bonus Lecture: Other Courses at a Discount
Design Patterns in C# and .NET
Mastering LINQ with C# and .NET
Learn Parallel Programming with C# and .NET
Dependency Injection in C# and .NET with the Autofac Library
Mastering Reactive Extensions with C# and .NET
Master .NET and C# Unit Testing with NUnit and Moq
